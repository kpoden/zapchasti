if(document.querySelector(".catalog-slider__inner")){const a=new Swiper(".catalog-slider__inner",{direction:"vertical",slidesPerView:9,spaceBetween:20,updateOnWindowResize:!0,loop:!0,lazy:!0,zoom:!0,effect:"slide",autoplay:{delay:3e3},speed:1500}),b=document.querySelector(".catalog-slider__arr-top"),c=document.querySelector(".catalog-slider__arr-bottom");c.addEventListener("click",()=>{a.slidePrev()}),b.addEventListener("click",()=>{a.slideNext()})}if(document.querySelector(".catalog-slider__inner--mob")){const d=new Swiper(".catalog-slider__inner--mob",{slidesPerView:3.5,spaceBetween:5,updateOnWindowResize:!0,freeMode:!0,loop:!0,lazy:!0,zoom:!0,effect:"slide",autoplay:{delay:3e3},speed:1500,breakpoints:{600:{slidesPerView:5.5,spaceBetween:10}}})}function spoiler(){const t=document.querySelectorAll(".product");document.querySelector(".spoiler");if(4<t.length)for(let e=4;e<t.length;e++)t[e].classList.add("hidden")}if(document.querySelector(".spoiler")&&spoiler(),document.querySelector(".item-images")){const h=new Swiper(".item-images",{slidesPerView:1,spaceBetween:20,updateOnWindowResize:!0,loop:!0,lazy:!0,zoom:!0,effect:"slide",speed:1500})}function itemDropdown(){const e=document.querySelectorAll(".item-info__drop-title");0<e.length&&e.forEach(e=>{e.addEventListener("click",e=>{e.target.classList.toggle("expanded")})})}function similarProductsSlider(){document.querySelector(".similarProductsSlider")&&new Swiper(".similarProductsSlider",{slidesPerView:2,spaceBetween:20,updateOnWindowResize:!0,loop:!0,lazy:!0,zoom:!0,effect:"slide",autoplay:{delay:1e3},speed:1500,breakpoints:{750:{slidesPerView:3},1024:{slidesPerView:4}}})}function quantInput(){if(document.querySelector(".item-info__quant-input")){const e=document.querySelectorAll(".item-info__quant-input");e.forEach(e=>{const t=e.querySelector(".quant-minus"),o=e.querySelector(".quant-plus"),r=e.querySelector(".quant-num");t.addEventListener("click",()=>{let e=parseInt(r.value)-1;e=e<1?1:e,r.value=e,r.setAttribute("value",e)}),o.addEventListener("click",()=>{let e=parseInt(r.value)+1;e=e>parseInt(r.getAttribute("data-max-count"))?parseInt(r.getAttribute("data-max-count")):e,r.value=e,r.setAttribute("value",e)}),r.addEventListener("change",function(){this.value.match(/[^0-9]/g)&&(this.value=this.value.replace(/[^0-9]/g,"")),""==this.value&&(this.value=1,r.setAttribute("value",1)),this.value>parseInt(this.getAttribute("data-max-count"))&&(this.value=parseInt(this.getAttribute("data-max-count")))}),r.addEventListener("keyup",function(){this.value.match(/[^0-9]/g)&&(this.value=this.value.replace(/[^0-9]/g,""))}),r.addEventListener("input",function(){this.value.match(/[^0-9]/g)&&(this.value=this.value.replace(/[^0-9]/g,""))}),r.addEventListener("click",function(){this.value.match(/[^0-9]/g)&&(this.value=this.value.replace(/[^0-9]/g,""))})})}}function modalFunc(){const t=document.querySelector(".modal"),e=document.querySelectorAll(".modal-trigger"),o=document.querySelectorAll(".modal__close");t.addEventListener("click",e=>{(e=e.target).classList.contains("modal")&&(t.classList.remove("opened"),document.body.classList.remove("_locked"))}),e.forEach(e=>{e.addEventListener("click",()=>{t.classList.add("opened"),document.body.classList.add("_locked")})}),o.forEach(e=>{e.addEventListener("click",()=>{t.classList.remove("opened"),document.body.classList.remove("_locked")})})}itemDropdown(),similarProductsSlider(),quantInput(),modalFunc();class Form{constructor(e){this.formBlock=document.querySelector(e),this.form=this.formBlock.querySelector("form"),this.mainContent=this.formBlock.querySelector(".mainForm__content"),this.modal=document.querySelector(".modal"),this.modalMainContent=this.modal.querySelector(".mainForm__content"),this.modalThanksContent=this.modal.querySelector(".thanksOrder"),this.modalThanksContent2=this.modal.querySelector(".thanksCallback"),this.thanksContent=this.formBlock.querySelector(".thanksWindow__content"),this.form.reset(),this.init()}openModal(){this.modal.classList.add("opened"),document.body.classList.add("_locked")}createError(e){let r="Обязательное поле",t=document.createElement("span");t.textContent=r,t.classList.add("_error-txt"),e.forEach(e=>{const t=e.closest(".form__input-wrap");let o=document.createElement("span");o.textContent=r,o.classList.add("_error-txt"),e.classList.add("_error-input"),t.appendChild(o)})}deleteErrors(){const e=this.form.querySelectorAll("._error-txt"),t=(e.forEach(e=>{const t=e.parentNode;t.removeChild(e)}),this.form.querySelectorAll("input[type=text], input[type=tel"));t.forEach(e=>{e.classList.remove("_error-input")})}validateForm(){const e=this.form.querySelector('input[name="name"]'),t=this.form.querySelector('input[name="phone"]');var o=e.value.trim(),r=t.value.trim();this.deleteErrors();let s=[];return""===o&&s.push(e),""===r&&s.push(t),!(0<s.length)||(this.createError(s),!1)}send(){this.form.addEventListener("submit",e=>{if(e.preventDefault(),this.validateForm()){const t=new XMLHttpRequest;e=new FormData(this.form);console.log(e),console.log("send form data"),this.form.classList.contains("orderForm")?t.open("POST","local/ajax/order.php"):t.open("POST","/local/ajax/send.php"),t.onload=()=>{200===t.status?console.log(t.responseText):console.error("Ошибка: ",t.status)},t.send(e),this.form.classList.add("sent"),this.form.reset()}})}maskInit(){var e=this.form.querySelector("input[name=phone]");IMask(e,{mask:"+{7}(000) 000-00-00"})}init(){this.maskInit(),this.send()}}if(document.querySelector(".contacts-form")){const X=new Form(".contacts-form")}if(document.querySelector(".basket-form")){const Y=new Form(".basket-form")}const floatForm=new Form(".popup-form");function formAttach(){document.querySelectorAll(".form__attach input[type=file]").forEach(e=>{e.addEventListener("change",function(){var e=this.files[0],t=this.parentNode.querySelector(".form__attach-text");e&&10485760<e.size?(t.innerHTML="Максимальный размер файла 10Мб",t.classList.add("_error"),console.log("max file size")):(t.innerHTML=e?e.name:"",t.classList.remove("_error"))})})}formAttach();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
